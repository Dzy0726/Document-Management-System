<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPn5
        +QL9/f0C4+PjBJeXlxaFhYUoiIiIKKenpxT4+PgK+vr6Bvj4+AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        MLcUFBTXEBAQ+QYGBv8CAgL/AwMD/wYGBv8VFRX7IyMj3TQ0NKs+Pj5e1NTUNP39/QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPv7+w4AAAAA39/fBJmZmRiFhYUohoaGKKCgoBT39/cI+/v7DPr6+gYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP//8AP//wAA//+AAH//AAD//gAAH/8AAP/4AAAH/wAA//AH+AP/AAD/4D/+Af8AAP/A
        f/+A/wAA/4H+H+B/AAD/A+AD8D8AAP8HwAD4PwAA/g8AAHwfAAD+DgAAPB8AAPweAIAeDwAA/DwBwA4P
        AAD8OADADw8AAPg4AAAHBwAA+HgAgAcHAAD4cADAB4cAAPhwAMAHhwAA+HAA4AOHAAD4cABwA4cAAPhw
        ADgHhwAA+HAAHAeHAAD4eAwcBwcAAPg4DhwHBwAA+DgHOA8PAAD8PAPwDg8AAPweAMAeDwAA/h4AADwf
        AAD+DwAAfB8AAP8HwAD4PwAA/wPgA/A/AAD/gf4f4H8AAP/A//+A/wAA/+A//wH/AAD/8Af4A/8AAP/4
        AAAH/wAA//4AAB//AAD//4AAf/8AAP//8AP//wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>